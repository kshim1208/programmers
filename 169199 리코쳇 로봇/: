## 리코쳇 로봇
  
### 사용한 접근 방식
최단 거리를 찾는 과제이기에 BFS를 선택했다.  
DFS는 깊이 우선이라 최단 거리가 존재하지 않는 노드 조합을 탐색하여 비효율적인 동작을 할 가능성이 있었음.  
또한 최단 거리는 트리의 깊이이므로, 해당 깊이에서의 가능한 경우를 확인한 뒤 넘어가는데 최단 거리를 찾기 더 유리하다고 생각함.  
  
### 공부한 것
BFS 전반  
4방향 이동을 반복문으로 표현하는 법 - 하나의 iter 구조로 묶어내기
pair 클래스 사용법 - map이나 set에서 간접적으로 썼었는데, 이게 클래스 단위로 존재하는 줄은 처음 알았음.  
queue container adaptor 사용법  
- container adaptor이기에 stack처럼 기반이 되는 container의 기능을 가져와서 사용.  
- 그 과정에서 이름이 약간 달라진 경우 있었음. push_back 대신 push를 쓴다던가.  
일부 container의 멤버 함수를 재확인했음. 특히 pair를 공부하는 과정에서 set과 map의 구조를 다시 한 번 점검함.
